basePath: /
definitions:
  models.Account:
    properties:
      balance:
        type: integer
      currency:
        type: integer
      id:
        type: string
      isCredit:
        type: boolean
      userId:
        type: string
    type: object
  models.Customer:
    properties:
      blocked:
        type: boolean
      fullname:
        type: string
      id:
        type: string
      login:
        type: string
      password:
        type: string
      timecreated:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  license:
    name: Apache 2.0
  title: PetBank API
  version: "1.0"
paths:
  /balance:
    post:
      consumes:
      - application/json
      parameters:
      - description: accountId (uuid string) , userid (uuid string) , amount (int)
          | {
        in: body
        name: data
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
      summary: replenish / withdraw account
      tags:
      - Accounts
  /blockaccount:
    post:
      consumes:
      - application/json
      parameters:
      - description: id (uuid string) , userid (uuid string) | {
        in: body
        name: data
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
      summary: block acc from operations
      tags:
      - Accounts
  /getaccountdetails/{userid}/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: userid uuid string
        in: path
        name: userid
        required: true
        type: string
      - description: id uuid string
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
      summary: get account details
      tags:
      - Accounts
  /getallaccounts:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Account'
            type: array
      summary: get all accounts
      tags:
      - Accounts
  /getallusers:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Customer'
            type: array
      summary: get all
      tags:
      - Users
  /newaccount:
    post:
      consumes:
      - application/json
      parameters:
      - description: Userid (string) , IsCredit (bool) , Balance (int) , Currency
          (1-3) | {
        in: body
        name: data
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
      summary: create new account
      tags:
      - Accounts
  /signin:
    post:
      consumes:
      - application/json
      parameters:
      - description: login (uuid string) , password (uuid string) | {
        in: body
        name: data
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
      summary: sign in (no functionality yet)
      tags:
      - Users
  /signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Fullname (string) , Login (string) , Password (string) | {
        in: body
        name: data
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
      summary: create
      tags:
      - Users
  /user/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
      summary: Get user details with id
      tags:
      - Users
  /user/block/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Block user by himself with id
      tags:
      - Users
swagger: "2.0"
