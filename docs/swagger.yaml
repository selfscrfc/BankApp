basePath: /
definitions:
  models.Customer:
    properties:
      blocked:
        type: boolean
      fullname:
        type: string
      id:
        type: string
      login:
        type: string
      password:
        type: string
      timecreated:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  license:
    name: Apache 2.0
  title: PetBank API
  version: "1.0"
paths:
  /getall:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Customer'
            type: array
      summary: get all
      tags:
      - Users
  /sign/in:
    post:
      consumes:
      - application/json
      parameters:
      - description: id
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
      summary: Sign in
      tags:
      - Users
  /sign/up/:
    post:
      consumes:
      - application/json
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
      summary: create
      tags:
      - Users
  /user:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
      summary: Get user details with id
      tags:
      - Users
  /user/{id}/block:
    post:
      consumes:
      - application/json
      parameters:
      - description: id
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Block user by himself with id
      tags:
      - Users
swagger: "2.0"
